clear all
clc
close all

% mf process - filter
se = strel('line',2,2);
se2 = strel('line',500,500);

f=imread('adsiz.jpg');
[row,column] = size(f);


Img2 = rgb2gray(f);
Img2 = imbinarize(Img2);
Img2 = ~Img2;

BW=edge(Img2,'canny',[0.04 0.1],4);

[H,theta,rho] = hough(BW);


P = houghpeaks(H,7);
x = theta(P(:,2)); y = rho(P(:,1));
%plot(x,y,'s');



% Find lines and plot them
lines = houghlines(BW,theta,rho,P,'FillGap',3000,'MinLength',100);


% t : tum noktalari iceresinde tutan degisken
% pointsGrouped : pointleri eslestirmek icin gerekli olan degisken

% noktalari grupluyan algoritma :

t = [];
pointsGrouped = [];

for k = 1:length(lines)
        xy = [lines(k).point1; lines(k).point2];
        ab = [xy(1,1) xy(1,2)]; % baslangic noktasi
        cd = [xy(2,1) xy(2,2)]; % bitis noktasi
        t = [t ;ab ;cd]; 
        pointsGrouped = [pointsGrouped ;ab,2*k;cd,2*k-1]; 
        %xy_arr(k) = xy;
              
end


%Houghline sonucu olusan cizgileri cizer
[row,col] = size(t);

% Noktalar arasindaki farklari bulan algoritma :

pad = zeros(row-1,1);

for index = 1:row
    col_index = 1;
    for artis = 1:row-index
            fark = sqrt(abs(t(index,1)-t(index+artis,1))^2 + abs(t(index,2)-t(index+artis,2))^2);
            fark_arr(index,col_index+index-1) = fark;
            col_index = col_index + 1;
    end
end
fark_arr = [pad fark_arr];


% Ayni oldugu dusunulen noktalari gruplayan algoritma :
[row1,col1] = size(fark_arr);
for fark_index1 = 1:row1
    for fark_index2 = 1:col1
        if (fark_arr(fark_index1,fark_index2) < 70 && fark_arr(fark_index1,fark_index2) ~= 0)    
            ayni_nok(fark_index1,fark_index2) = 1;  
        else
            ayni_nok(fark_index1,fark_index2) = 0;
        end
    end
end

a=[];
for fark_index1 = 1:ceil(row1/2)
    s = 1;
    for fark_index2 = 1:col1
        if(ayni_nok(fark_index1,fark_index2) == 1)
            
                a(fark_index1,s) = fark_index1;
                a(fark_index1,s+1) = fark_index2;
                s = s + 2;
        end
    end
end


% - Fazlaliklari ve tekrarlari siler

[row2,col2] = size(a);

flag = 0;
basic_a = a;

for  temp= 2:col2/2+1
    if(mod(temp,2) == 1 && flag == 0)
       basic_a(:,temp) = [];
       flag = 1;
    end
    if(mod(temp,2) == 0  && flag == 1)
        flag = 0;
        basic_a(:,temp) = [];
    end
end

[row3,col3] = size(basic_a);
com = 1;
for fark_index1 = 1:row3
    for fark_index2 = 1:col3
        tel = basic_a(fark_index1,fark_index2);
        if (tel < ceil(row1/2) && tel ~= fark_index1 && tel ~= 0)
            del_num(com) = tel;
            com = com + 1;
        end
    end
end

basic_a2 = basic_a;
del_row=0;
[row4,col4] = size(del_num);
for del_index = 1:col4
    basic_a2(del_num(del_index)-del_row,:) = [];
    del_row=del_row+1;
end

% Kordinatlarin eslesmesi icin

% basic_a2 : tertemiz-pak matrix

[row5 , col5] = size(basic_a2);
basic_a3 = basic_a2;
basic_a3(:,col5+1) = -1; % ayrac


transpose_basic_a2 = basic_a2';

for row_i = 1:row5
    for col_i = 1:col5
        if(basic_a2(row_i,col_i) ~= 0)
            
            bufferFounder = floor((find(transpose_basic_a2==pointsGrouped(basic_a2(row_i,col_i),3)))/col5+1); % hangi satir'da oldugu bulunur
            
            if(bufferFounder ~= 0)    
                bufferPointChosen = basic_a2(bufferFounder,1);
                basic_a3(row_i,col5+1+col_i)=bufferPointChosen;
            end
            
        end
    end
end

%

imshow(f+255);
hold on ;


[row6 , col6]=size(basic_a3);

for bj = 1:row5
    for bi = col5+2:col6
        if(basic_a3(bj,bi) ~= 0)
            n1_x = t(basic_a2(bj,1),1);
            n1_y = t(basic_a2(bj,1),2);
            n2_x = t(basic_a3(bj,bi),1);
            n2_y = t(basic_a3(bj,bi),2);
            drawline('Position',[n1_x,n1_y;n2_x,n2_y],'Color','blue');
        end
    end
    hold on;
end

F = getframe(gcf);
[X, Map] = frame2im(F);

figure;
imshow(X);
% 
% X_bw = imbinarize(X); 
% Y_bw = imbinarize(Y);

% finalImage = X_bw && Y_bw;
% 
% imshow(finalImage)
